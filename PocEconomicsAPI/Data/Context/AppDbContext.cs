// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace PocEconomicsAPI.Models;

public partial class AppDbContext : DbContext
{
    public AppDbContext()
    {
    }

    public AppDbContext(DbContextOptions<AppDbContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Customer> Customers { get; set; }

    public virtual DbSet<EntrysFeild> EntrysFeilds { get; set; }

    public virtual DbSet<FileQueueInbound> FileQueueInbounds { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see https://go.microsoft.com/fwlink/?LinkId=723263.
        => optionsBuilder.UseSqlServer("Data Source=(localdb)\\MSSQLLocalDB;Initial Catalog=PocEconomicDB;Integrated Security=True;Encrypt=True");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Customer>(entity =>
        {
            entity.Property(e => e.customerNo).ValueGeneratedNever();
        });

        modelBuilder.Entity<EntrysFeild>(entity =>
        {
            entity.Property(e => e.customerNo).ValueGeneratedNever();

            entity.HasOne(d => d.customerNoNavigation).WithOne(p => p.EntrysFeild)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_EntrysFeilds_ToTable");
        });

        modelBuilder.Entity<FileQueueInbound>(entity =>
        {
            entity.HasKey(e => new { e.Id, e.TransportCode, e.SubEntryNo, e.ProfileId }).HasName("PK_FileQueueIndbound");

            entity.Property(e => e.Id).ValueGeneratedOnAdd();
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}